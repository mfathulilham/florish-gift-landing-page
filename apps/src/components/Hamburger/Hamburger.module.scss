@use "sass:math";

$menu-height: null;
$menu-gutter: null;
$menu-color: null;
$menu-margin: null;
$menu-margin-left: null;
$menu-margin-top: null;
$menu-top: null;

:root {
  --color-black: black;
  --color-white: white;
}

.hidden {
  visibility: hidden;
  position: absolute;
  width: 0;
  height: 0;
}

@function rem($size) {
  $rem-size: calc($size / 16px);
  @return $rem-size * 1rem;
}

// The mixin
@mixin menu(
  $width: 1.5rem,
  $height: rem(2),
  $gutter: rem(3),
  $color: black,
  $round: 0,
  $transition-duration: 0.3s
) {
  @if math.unit($width) == "px" {
    $width: rem($width);
  }

  @if math.unit($height) == "px" {
    $height: rem($height);
  }

  @if math.unit($gutter) == "px" {
    $gutter: rem($gutter);
  }

  // Set margins
  $margin: $height + $gutter;
  $margin-left: calc($width / 2);
  $margin-top: calc($height / 2);

  // Set specific styles for each bar
  $top: $height + $gutter;

  // set global Variables
  $menu-height: $height !global;
  $menu-gutter: $gutter !global;
  $menu-color: $color !global;
  $menu-margin: $margin !global;
  $menu-margin-left: $margin-left !global;
  $menu-margin-top: $margin-top !global;
  $menu-top: $top !global;

  // The code for the span
  user-select: none;
  position: absolute;
  margin: #{$margin-top} auto #{$margin} -#{$margin-left};
  text-indent: -999em;
  top: 50%;
  left: 50%;
  margin-top: -#{calc($menu-height / 2)};
  cursor: pointer;

  // Set styles to bars
  &,
  &::before,
  &::after {
    display: block;
    width: $width;
    height: $height;
    background-color: $color;
    transition: $transition-duration;
    opacity: 1;

    @if $round != 0 {
      border-radius: $round;
    }
  }

  // Bottom and top bar
  &::before,
  &::after {
    position: absolute;
    content: "";
  }

  // Top bar
  &::before {
    top: -#{$top};
  }

  // Bottom bar
  &::after {
    top: #{$top};
  }
}

@mixin menu-close-rtl {
  &::before,
  &::after {
    top: 0;
    margin-top: -#{(calc($menu-height / 2)) + ($menu-gutter + $menu-height)};
    @content;
  }

  & {
    background-color: transparent;
  }

  &::before {
    transform: translateY($menu-gutter + $menu-height) rotate(-45deg);
  }

  &::after {
    transform: translateY($menu-gutter + $menu-height) rotate(45deg);
  }
}

@mixin menu-reset {
  &::before,
  &::after {
    margin-top: 0;
    @content;
  }

  & {
    background-color: $menu-color;
  }

  &::before {
    transform: translateY(0) rotate(0deg);
    top: -#{$menu-top};
  }

  &::after {
    transform: translateY(0) rotate(0deg);
    top: #{$menu-top};
  }
}

@mixin menu-body {
  &,
  &::before,
  &::after {
    @content;
  }
}

@mixin menu-body-first {
  &::before {
    @content;
  }
}

@mixin menu-body-middle {
  & {
    @content;
  }
}

@mixin menu-body-last {
  &::after {
    @content;
  }
}

@mixin menu-body-close {
  &::before,
  &::after {
    @content;
  }
}

.burger {
  display: block;
  position: relative;

  // width: 3rem;
  // height: 3rem;
  width: 24px;
  height: 24px;
  border-radius: 3px;
  box-shadow: 0 0 grid(1) rgb(0 0 0 / 25%), 0 0 grid(0.2) rgb(0 0 0 / 10%);

  // background-color: var(--color-white);
  background-color: transparent;

  // margin: 0.5rem;
  margin: 0;
  cursor: pointer;

  span {
    @include menu(16px, 2px, 4px, var(--color-black));
  }

  input:checked + span {
    @include menu-close-rtl;

    // custom color
    &::before,
    &::after {
      background-color: black;
    }
  }
}
